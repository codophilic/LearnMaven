<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>JavatoJson</groupId>
  <artifactId>JavatoJson</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  

<!--
  <executions>: This is the list of executions to be performed for the plugin. An execution is a specific configuration of the plugin that is run at a specific phase in the Maven build lifecycle.

<execution>: This is a specific execution of the plugin that is defined within the <executions> element. Each execution has its own configuration and set of goals to be executed.

<phase>: This is the Maven build lifecycle phase in which the execution should be run. In this case, the plugin will be executed during the prepare-package phase, which occurs just before the project is packaged for distribution.

<goals>: This is the list of goals to be executed for the execution. In this case, the generate-json-schemas goal will be executed.

<configuration>: This is the configuration for the execution. In this case, the includes element is used to specify which classes should have JSON schemas generated for them. The **/*.class pattern will match any .class file in any directory within the project
-->


<build>
 <plugins>
  
  <plugin>
   <groupId>io.gravitee.maven.plugins</groupId>
   <artifactId>json-schema-generator-maven-plugin</artifactId>
   <version>1.3.0</version>
   <executions>
    <execution>
     <phase>prepare-package</phase> <!-- Run as maven build, goals prepare-package in eclipse-->
     <goals>
      <goal>generate-json-schemas</goal>
     </goals>
     <configuration>
      <includes>
	   <include>**/*.class</include>
      </includes>
     </configuration>
    </execution>
   </executions>
  </plugin>
 
 </plugins>
</build>
    
</project>